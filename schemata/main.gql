directive @authenticate(scopes: [Scope!]) on FIELD_DEFINITION

scalar Time

enum Scope {
  READ
  WRITE
}

enum LiverStatus {
  ANNOUNCED
  DEBUTED
  RETIRED
}

type Liver {
  name: String!
  debuted_on: Time!
  retired_on: Time
  status: LiverStatus!
  enrollmentDays: Int!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String
  endCursor: String
}

type LiverEdge {
  node: Liver!
  cursor: String!
}

type LiverConnection {
  edges: [LiverEdge!]!
  pageInfo: PageInfo!
}

enum OrderDirection {
  ASC
  DESC
}

enum LiverOrderField {
  DATABASE_ID
}

input LiverOrder {
  field: LiverOrderField!
  direction: OrderDirection!
}

type Query {
  liver(name: String!): Liver @authenticate(scopes: [READ])
  livers(
    first: Int = 0,
    after: String,
    orderBy: LiverOrder
  ): LiverConnection! @authenticate(scopes: [READ])
}

type Mutation {
  registerLiver(name: String!): Boolean! @authenticate(scopes: [WRITE])
}
